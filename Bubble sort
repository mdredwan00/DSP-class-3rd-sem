#include<iostream>
using namespace std;

// Function to implement Bubble Sort algorithm
void bubbleSort(int arr[], int size) {
    bool swapped;
    // Iterate through the array
    for(int i = 0; i < size - 1; i++) {
        swapped = false;
        // Inner loop to compare adjacent elements and swap if necessary
        for(int j = 0; j < size - 1; j++) {
            if(arr[j] > arr[j+1]) {
                // Swap elements if they are in the wrong order
                int temp = arr[j];
                arr[j] = arr[j+1];
                arr[j+1] = temp;
                // Set swapped flag to true to indicate a swap occurred
                swapped = true;
            }
        }
        // If no swap occurred in this pass, the array is sorted, so break out of the loop
        if(!swapped) {
            break;
        }
    }
}

// Function to print the elements of an array
void printArray(int arr[], int size) {
    for(int i = 0; i < size; i++) {
        // Print each element followed by a space
        cout << arr[i] << " ";
    }
    // Print a newline character to move to the next line
    cout << endl;
}

int main() {
    // Initialize an array of integers
    int arr[] = {23, 4, 234, 4, 34, 3453, 23, 23, 23, 4, 4, 52, 32, 23, 24, 3245, 234, 3, 42, 342, 423131, 34345, 345};
    // Calculate the size of the array
    int size = sizeof(arr) / sizeof(arr[0]);

    // Print the unsorted array
    cout << "Unsorted array: ";
    printArray(arr, size);

    // Sort the array using Bubble Sort
    bubbleSort(arr, size);

    // Print the sorted array
    cout << "Sorted array: ";
    printArray(arr, size);

    return 0;
}
